----BANK LOAN REPORT QUERY REPORT-----
----BANK LOAN REPORT------
----SUMMARY----
----KPI'S---
---TOTAL LOAN APPLICATIONS---
SELECT COUNT (ID) AS TOTAL_LOAN_APPLICATIONS FROM BANK_LOAN_DATA
----MONTH TO DATE LOAN APPLICATIONS----
SELECT COUNT(ID) AS TOTAL_LOAN_APLICATIONS FROM BANK_LOAN_DATA
WHERE MONTH(ISSUE_DATE)=12 AND YEAR(ISSUE_DATE)=2021
----PREVIOUS MONTH TO DATE TOTAL FUNDED AMOUNT---
SELECT SUM (LOAN_AMOUNT) AS TOTAL_FUNDED_AMOUNT FROM BANK_LOAN_DATA
WHERE MONTH (ISSUE_DATE)=11
----TOTAL AMOUNT RECEIVED-----
SELECT SUM (TOTAL_PAYMENT)AS TOTAL_AMOUNT_COLLECTED
FROM BANK_LOAN_DATA
-----MTD TOTAL AMOUNT RECEIVED-----
SELECT SUM (TOTAL_PAYMENT) AS TOTAL_AMOUNT_COLLECTED FROM 
BANK_LOAN_DATA
WHERE MONTH (ISSUE_DATE)=12
----PMDT TOTAL AMOUNT RECEIVED----
SELECT AVG (INT_RATE) *100 AS AVG_INT_RATE FROM BANK_LOAN_DATA
---MTD AVERAGE INTEREST-----
SELECT AVG(INT_RATE)*100 AS MTD_AVG_INT_RATE FROM BANK_LOAN_DATA
WHERE MONTH (ISSUE_DATE)=11
SELECT AVG(int_rate)*100 AS MTD_Avg_Int_Rate FROM bank_loan_data
WHERE MONTH(issue_date) = 12
SELECT AVG(int_rate)*100 AS MTD_Avg_Int_Rate FROM bank_loan_data
WHERE MONTH(issue_date) = 12
----AVERAGE DTI-----
SELECT AVG(DTI)*100 AS MTD_AVG_DTI FROM BANK_LOAN_DATA
WHERE MONTH (ISSUE_DATE)=12
---PMDT AVERAGE DTI----
SELECT AVG(DTI)*100 AS MTD_AVG_DTI FROM BANK_LOAN_DATA
WHERE MONTH (ISSUE_DATE)=11
---GOOD LOAN ISSUED----
---GOOD LOAN PERCENTAGE---
SELECT
(COUNT(CASE WHEN LOAN_STATUS ='FULLY PAID' OR LOAN_STATUS=
'CURRENT' THEN ID END)*100.0)/
COUNT(ID)AS GOOD_LOAN_PERCENTAGE
FROM BANK_LOAN_DATA

----GOOD LOAN APPLICATIONS---
SELECT COUNT (ID) AS GOOD_LOAN_APPLICATIONS FROM BANK_LOAN_DATA
WHERE LOAN_STATUS= 'FULLY PAID' OR LOAN_STATUS='CURRENT'
---GOOD LOAN FUNDED AMOUNT---
SELECT SUM (LOAN_AMOUNT) AS GOOD_LOAN_FUNDED_AMOUNT FROM BANK_LOAN_DATA
WHERE LOAN_STATUS ='FULLY PAID' OR LOAN_STATUS='CURRENT'
-----GOOD LOAN AMOUNT RECEIVED----
SELECT SUM (TOTAL_PAYMENT) AS GOOD_LOAN_AMOUNT_RECEIVED FROM BANK_LOAN_DATA
WHERE LOAN_STATUS ='FULLY PAID' OR LOAN_STATUS ='CURRENT'
----BAD LOAN ISSUED----
---BAD LOAN PERCENTAGE----
SELECT 
(COUNT(CASE WHEN LOAN_STATUS = 'CHARGED OFF' THEN ID END)* 100)/
COUNT (ID) AS BAD_LOAN_PERCENTAGE
FROM BANK_LOAN_DATA
----BAD LOAN APPLICATIONS----
SELECT COUNT(ID) AS BAD_LOAN_APPLICATIONS FROM BANK_LOAN_DATA
WHERE LOAN_STATUS='CHARGED OFF'
----BAD LOAN FUNDED AMOUNT----
SELECT SUM(LOAN_AMOUNT) AS BAD_LOAN_FUNDED_AMOUNT FROM BANK_LOAN_DATA
WHERE  LOAN_STATUS ='CHARGED OFF'
---BAD LOAN AMOUNT RECEIVED----
SELECT SUM (TOTAL_PAYMENT) AS BAD_LOAN_AMOUNT_RECEIVED FROM BANK_LOAN_DATA
WHERE LOAN_STATUS ='CHARGED OFF'
-----LOAN STATUS-----
SELECT 
LOAN_STATUS,
COUNT(ID) AS LOANCOUNT,
SUM (TOTAL_PAYMENT) AS TOTAL_AMOUNT_RECEIVED,
SUM(LOAN_AMOUNT)AS TOTAL_FUNDED_AMOUNT,
AVG(INT_RATE*100)AS INTEREST_RATE,
AVG (DTI*100) AS DTI
FROM BANK_LOAN_DATA
GROUP BY LOAN_STATUS

----ANOTHER MODEL QUERY----
SELECT 
LOAN_STATUS,
SUM(TOTAL_PAYMENT)AS MTD_TOTAL_AMOUNT_RECEIVED,
SUM(LOAN_AMOUNT) AS MTD_TOTAL_FUNDED_AMOUNT
FROM BANK_LOAN_DATA
WHERE MONTH (ISSUE_DATE)=12
GROUP BY LOAN_STATUS

----BANK LOAN REPORT OVERVIEW----
-----MONTH----
SELECT 
MONTH (ISSUE_DATE) AS MONTH_NUMBER,
DATENAME(MONTH,ISSUE_DATE)AS MONTH_NAME,
COUNT(ID)AS TOTAL_LOAN_APPLICATIONS,
SUM(LOAN_AMOUNT)AS TOTAL_FUNDED_AMOUNT,
SUM(TOTAL_PAYMENT)AS TOTAL_AMOUNT_RECEIVED
FROM BANK_LOAN_DATA
GROUP BY MONTH (ISSUE_DATE),DATENAME(MONTH,ISSUE_DATE)
ORDER BY MONTH(ISSUE_DATE)
-----STATE----
SELECT
ADDRESS_STATE AS STATE,
COUNT(ID)AS TOTAL_LOAN_APPLICATIONS,
SUM(LOAN_AMOUNT)AS TOTAL_FUNDED_AMOUNT,
SUM(TOTAL_PAYMENT)AS TOTAL_AMOUNT_RECEIVED
FROM BANK_LOAN_DATA
GROUP BY ADDRESS_STATE
ORDER BY ADDRESS_STATE
-----TERM---
SELECT 
TERM AS TERM,
COUNT(ID) AS TOTAL_LOAN_APPLICATIONS,
SUM(LOAN_AMOUNT)AS TOTAL_FUNDED_AMOUNT,
SUM(TOTAL_PAYMENT)AS TOTAL_AMOUNT_RECEIVED 
FROM BANK_LOAN_DATA
GROUP BY TERM 
ORDER BY TERM
------EMPLOYEE LENGTH----
SELECT 
EMP_LENGTH AS EMPLOYEE_LENGTH,
COUNT(ID)AS TOTAL_LOAN_APPLICATIONS,
SUM (LOAN_AMOUNT)AS TOTAL_FUNDED_AMOUNT,
SUM(TOTAL_PAYMENT)AS TOTAL_AMOUNT_RECEIVED
FROM BANK_LOAN_DATA
GROUP BY EMP_LENGTH
ORDER BY EMP_LENGTH

-----PURPOSE-----
SELECT
PURPOSE AS PURPOSE,
COUNT(ID) AS TOTAL_LOAN_APPLICATIONS,
SUM(LOAN_AMOUNT)AS TOTAL_FUNDED_AMOUNT,
SUM (TOTAL_PAYMENT)AS TOTAL_AMOUNT_RECEIVED 
FROM BANK_LOAN_DATA
GROUP BY PURPOSE
ORDER BY PURPOSE
-----HOME OWNERSHIP----
SELECT 
HOME_OWNERSHIP AS HOME_OWNERSHIP,
COUNT(ID) AS TOTAL_LOAN_APPLICATIONS,
SUM(LOAN_AMOUNT)AS TOTAL_FUNDED_AMOUNT,
SUM(TOTAL_PAYMENT)AS TOTAL_AMOUNT_RECEIVED
FROM BANK_LOAN_DATA
GROUP BY HOME_OWNERSHIP
ORDER BY HOME_OWNERSHIP
----NOTE:WE HAVE APPLIED MULTIPLE FILTERS ON ALL THE DASHBOARDS. YOU 
CAN CHECK THE RESULTS FOR THE FILTERS AS WELL BY MODIFYING THE QUERY
AND COMPARING THE RESULTS.
FOE EXAMPLE 
SELECT 
PURPOSE AS PURPOSE,
COUNT(ID) AS TOTAL_LOAN_APPLICATIONS,
SUM(LOAN_AMOUNT)AS TOTAL_FUNDED_AMOUMT,
SUM(TOTAL_PAYMENT)AS TOTAL_AMOUNT_RECEIVED
FROM BANK_LOAN_DATA
WHERE GRADE='A'
GROUP BY PURPOSE 
ORDER BY PURPOSE 
